kind: Service
apiVersion: v1
metadata:
  labels:
    app: {{ template "forc.pub.name" . }}
    chart: {{ template "forc.pub.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: {{ template "forc.pub.name" . }}-service
spec:
  type: NodePort
  selector:
    app: {{ template "forc.pub.name" . }}
  ports:
    - name: http
      port: {{ .Values.app.http_port }}
      protocol: TCP
      targetPort: {{ .Values.app.target_port }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "forc.pub.name" . }}-k8s
  labels:
    app: {{ template "forc.pub.name" . }}
    chart: {{ template "forc.pub.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "forc.pub.name" . }}
      release: {{ .Release.Name }}
  replicas: {{ .Values.app.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "forc.pub.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Values.app.name }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
          command: ["./forc.pub"]
          resources: {}
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.app.target_port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.app.target_port }}
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 60
          env:
            - name: PORT
              value: "{{ .Values.app.target_port }}"
