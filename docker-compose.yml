services:
  db:
    image: postgres:latest
    container_name: forc-pub-db
    env_file:
      - .env.local
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - forc-pub-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: deployment/Dockerfile
    container_name: forc-pub
    env_file:
      - .env.local
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_URI: db
      POSTGRES_DB_NAME: ${POSTGRES_DB_NAME}
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - forc-pub-net

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: forc-pub-pgadmin
    env_file:
      - .env.local
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@forc.pub}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: 'False'
      PGADMIN_CONFIG_WTF_CSRF_ENABLED: 'False'
      PGADMIN_SERVER_JSON_FILE: '/pgadmin4/servers.json'
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./scripts/pgadmin-servers.json:/pgadmin4/servers.json:ro
    depends_on:
      db:
        condition: service_healthy
    networks:
      - forc-pub-net

volumes:
  postgres_data:
  pgadmin_data:

networks:
  forc-pub-net:
    driver: bridge 